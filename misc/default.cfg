# Default configuration for QUAC stuff. (In case it's not obvious, don't start
# editing this file to add your configuration.)
#
# ALL paths in this file are relative to the directory containing the
# configuration file specified on the command line (NOT the config file
# currently being read).
#
# Importantly, that means no paths can be set in default.cfg, because there
# might be no --config option.

[path]
### Various paths.

# Load this other config file (only for the config file specified on the
# command line).
next_config =

# Location of the log file. (Note that more detailed logs are also printed to
# stdout, if it's a TTY.)
log =


[coll]
### Configuration for the collector.

# Directory in which to store collected tweet files.
tweets_dir =

# Parameters for OAuth login
consumer_key =
consumer_secret =
access_token =
access_secret =

# Location of the file containing keywords. If this is blank, a
# statuses/sample stream is started (i.e., random sample of all tweets);
# otherwise, a statuses/filter stream with the keywords in the file.
keywords_file =

# Maximum number of keywords to track. This just mirrors the Twitter limit
# (see https://dev.twitter.com/docs/streaming-api/methods) in order to provide
# more useful errors.
keywords_limit = 400

# How many tweets to store per file? (Currently, this is tuned to yield
# approximately 5 files per day with a 1% sample.)
tweets_per_file = 500000

# Log a heartbeat at the DEBUG level at this interval. Must be a power of two
# (in order to support our simple algorithm for heartbeating more frequently
# at startup.)
seconds_per_heartbeat = 256  ; must be a power of two


## Some network parameters.

# If true, do not use a proxy even if the environment suggests one.
no_proxy = false

# If non-empty, bind to this IP address when connecting to Twitter.
source_ip =

# Timeout in seconds on the HTTP socket.
socket_timeout = 10

# Reconnect backoff parameters.
#
# Initial delay (in seconds) after a stable connection fails.
reconnect_delay_base = 10.0
# Each time we reconnect again before reaching a stable connection, wait this
# many times longer than the last reconnect delay...
reconnect_delay_mult = 2.0
# ... until we are waiting this long (in seconds), which is the maximum. If we
# actually reach this, emit a warning each time, but don't stop retrying.
reconnect_delay_max = 21600  ; 6 hours

# A connection which stays up this long (in seconds) is assumed to be stable,
# and we reset the backoff.
connect_ok_duration = 180

# This limits the number of connections before we assume something significant
# is wrong and abort. Specifically, if more than _limit connections happen
# within _interval seconds, abort.
#
# Note that this is for detecting connection problems that lead to rapid
# bouncing. For a slow failure in which a stable connection can't be achieved
# and we keep waiting longer and longer, you want the warnings from
# reconnect_delay_max instead.
connect_limit = 48              ; average interval of 5 minutes for ...
connect_limit_interval = 14400  ; 4 hours


[pars]
### Configuration for the raw tweet parser

# The loader is tolerant of parsing failures, but if more than this many occur
# per file, abort.
parse_failure_max = 10


[tops]
### Configuration for the Topsy API

apikey =

# See Topsy API docs...
count_method = citation
